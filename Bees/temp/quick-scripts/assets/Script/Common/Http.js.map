{"version":3,"sources":["Http.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"..\\..\\..\\..\\..\\assets\\Script\\Common","sourcesContent":["/**\r\n * Http请求\r\n */\r\nimport UrlConfig from \"./UrlConfig\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Http {\r\n\r\n    /**\r\n     * Http返回状态\r\n     */\r\n    public static Code = {\r\n        /**\r\n         * 成功\r\n         */\r\n        OK: \"300\",\r\n    };\r\n\r\n    public static readonly UrlConfig = UrlConfig;\r\n    static rootUrl: string=Http.UrlConfig.rootUrl; \r\n\r\n    private xhr: XMLHttpRequest;\r\n    private isCancel: boolean = false;\r\n\r\n    private constructor() {\r\n \r\n        this.xhr = new XMLHttpRequest();\r\n        this.xhr.timeout = 10000;//超时10秒\r\n    }\r\n\r\n    public static send({\r\n        mountNode = null as cc.Node,//挂载节点\r\n        tag = null as any,//请求标识\r\n        url = null as string,//请求地址\r\n        data = {} as any,//请求数据\r\n        method = 'POST',//请求方式\r\n        success = (result, tag?) => { },//成功回调\r\n        error = null as Function,//失败回调\r\n        async = true }) {\r\n        if (!url) {\r\n            return;\r\n        }\r\n        if (!/^http/.test(url) && Http.rootUrl) {\r\n            url = Http.rootUrl + url;\r\n        }\r\n        cc.log('request url:%s method:%s', url, method);\r\n\r\n        if (!data.tk) {\r\n            // let time = new Date().getTime();\r\n            // data.tk = App.encryptByDES(App.UserManager.uid + \"|\" + time);\r\n            // if (App.UserManager.u) {\r\n            //     data.u = App.UserManager.u;\r\n            // }\r\n        }\r\n\r\n        cc.log(JSON.stringify(data));\r\n\r\n        let http = new Http();\r\n        http.request({\r\n            mountNode: mountNode,\r\n            tag: tag,\r\n            url: url,\r\n            data: data,\r\n            method: method,\r\n            success: success,\r\n            error: error,\r\n            async: async\r\n        });\r\n        cc.log('sendsendsendsendsendsendsend', url, method);\r\n        return http;\r\n    }\r\n\r\n    /**\r\n     * 不要调用此方法,调用底部的静态call方法\r\n     * 说明->查看底部调用入口\r\n     */\r\n    private request({\r\n        mountNode = null as cc.Node,\r\n        tag = null as any,\r\n        url = null as string,\r\n        data = {},\r\n        method = 'GET',\r\n        success = (result, tag?) => { },\r\n        error = null as Function,\r\n        async = true }) {\r\n        method = method || 'GET';\r\n\r\n        let dataPair = \"\";\r\n        for (let k in data) {\r\n            if (dataPair != \"\") {\r\n                dataPair += \"&\";\r\n            }\r\n            dataPair += k + \"=\" + encodeURIComponent(data[k]);\r\n        }\r\n\r\n        if (method == \"GET\" && dataPair != \"\") {\r\n            if (url.indexOf(\"?\") == -1) {\r\n                url += \"?\";\r\n            }\r\n            url += dataPair;\r\n        }\r\n\r\n        let errCallback = (msg) => {\r\n            if (this.isCancel) {\r\n                cc.log('request canceled!');\r\n                return;\r\n            }\r\n            if (mountNode != null && !cc.isValid(mountNode)) {//挂载节点已销毁\r\n                return;\r\n            }\r\n            if (error) {\r\n                error(msg, tag);\r\n                error = null;\r\n            }\r\n        }\r\n\r\n        this.xhr.onreadystatechange = () => {\r\n            if (this.xhr.readyState == 4 && !this.isCancel) {\r\n                if (this.xhr.status >= 200 && this.xhr.status <= 400) {\r\n                    let response = this.xhr.responseText;\r\n                    try {\r\n                        cc.log(response);\r\n                        if (response.indexOf('{') == 0) {\r\n                            response = JSON.parse(response);\r\n                        }\r\n                        if (mountNode != null && !cc.isValid(mountNode)) {//挂载节点已销毁\r\n                            return;\r\n                        }\r\n                        if (success) {\r\n                            success(response, tag);\r\n                        }\r\n                    } catch (e) {\r\n                        cc.error(e);\r\n                    }\r\n                } else {\r\n                    cc.warn('http request problem:' + this.xhr.status);\r\n                    errCallback('连接失败:' + this.xhr.status);\r\n                }\r\n            }\r\n        };\r\n\r\n        this.xhr.onerror = (e) => {\r\n            cc.error('http request onerror');\r\n            errCallback('连接失败，请检查网络');\r\n        };\r\n\r\n        this.xhr.ontimeout = () => {\r\n            cc.error('http request ontimeout');\r\n            errCallback('连接超时');\r\n        };\r\n\r\n        this.xhr.open(method, url, async);\r\n        this.xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n        if (method == \"GET\") {\r\n            cc.log('send Get!!');\r\n            this.xhr.send();\r\n        } else if (method == \"POST\") {\r\n            cc.log('send Post!!');\r\n            this.xhr.send(dataPair);\r\n        } else {\r\n            cc.log('[HTTP] no send');\r\n        }\r\n    }\r\n\r\n    cancel() {\r\n        this.isCancel = true;\r\n    }\r\n}\r\n"]}