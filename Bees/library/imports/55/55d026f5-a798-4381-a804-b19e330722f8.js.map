{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\Script\\Common/assets\\Script\\Common\\AudioManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"..\\..\\..\\..\\..\\assets\\Script\\Common","sourcesContent":["/**\r\n * 声音管理\r\n */\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class AudioManager {\r\n    private static mAudioManager: AudioManager;\r\n\r\n    static getInstance() {\r\n        if (AudioManager.mAudioManager == null) {\r\n            AudioManager.mAudioManager = new AudioManager();\r\n        }\r\n        return AudioManager.mAudioManager;\r\n    }\r\n\r\n    private musicPath; string = null;//当前正在播放的背景音乐\r\n    private musicId: number = null;//当前正在播放的背景音乐\r\n    private soundId: number = null;//当前正在播放的音效\r\n\r\n    private _musicOn: boolean = true;//是否开启播放背景音乐\r\n    private _soundOn: boolean = true;//是否开启播放音效\r\n\r\n    private constructor() {\r\n\r\n    }\r\n\r\n    //播放背景音乐\r\n    async playMusic(path: string, loop: boolean = true, volume = 1) {\r\n        if (!path) {\r\n            return;\r\n        }\r\n        try {\r\n            if (this.musicPath != path) {\r\n                if (this.musicId != null) {\r\n                    cc.audioEngine.stop(this.musicId);\r\n                }\r\n                this.musicId = await this.play(path, loop, volume);\r\n            }\r\n            this.musicPath = path;\r\n            if (!this.musicOn) {\r\n                this.pauseMusic();\r\n            }\r\n        } catch (e) {\r\n\r\n        }\r\n    }\r\n\r\n    private pauseMusic() {\r\n        cc.audioEngine.pause(this.musicId);\r\n    }\r\n\r\n    private resumeMusic() {\r\n        cc.audioEngine.resume(this.musicId);\r\n    }\r\n\r\n    /**\r\n     * 播放音效\r\n     * \r\n     * @param path 路径\r\n     * @param loop 是否循环\r\n     * @param resolve 播放成功回调\r\n     * @param reject 播放失败回调\r\n     */\r\n    playSoundAsync(path: string, loop: boolean = false, resolve: (value: Number) => Number, reject: (reason: any) => any) {\r\n        let promiseNumber: Promise<Number> = this.playSound(path, loop);\r\n        if (promiseNumber) {\r\n            if (resolve && reject) {\r\n                promiseNumber.then<Number>(resolve, reject);\r\n                return;\r\n            }\r\n            if (reject) {\r\n                promiseNumber.catch(reject);\r\n            }\r\n        } else {\r\n            if (reject) {\r\n                reject(null);\r\n            }\r\n        }\r\n    }\r\n\r\n    //播放很短的音效\r\n    async playSound(path: string, loop: boolean = false) {\r\n        if (!path) {\r\n            return;\r\n        }\r\n        if (!this.soundOn) {\r\n            return;\r\n        }\r\n        try {\r\n            this.soundId = await this.play(path, loop);\r\n            return this.soundId;\r\n        } catch (e) {\r\n\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 停止播放音效\r\n     * \r\n     * @param audioId \r\n     */\r\n    stopSound(audioId: number) {\r\n        if (typeof audioId === \"number\") {\r\n            cc.audioEngine.stop(audioId);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 停止播放所有声音\r\n     */\r\n    stopAll() {\r\n        this.musicPath = null;\r\n        this.musicId = null;\r\n        cc.audioEngine.stopAll();\r\n    }\r\n\r\n    private async play(path: string, loop: boolean = false, volume: number = 1,): Promise<number> {\r\n        return new Promise<number>((resolve, reject) => {\r\n            cc.loader.loadRes(path, (err, audio) => {\r\n                if (!err) {\r\n                    let id = cc.audioEngine.play(audio, loop, volume);\r\n                    // cc.log(\"async play audio %s\", audio);\r\n                    resolve(id);\r\n                } else {\r\n                    cc.error(err);\r\n                    reject(err);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    public set musicOn(on: boolean) {\r\n        if (this._musicOn == on) {\r\n            return;\r\n        }\r\n        this._musicOn = on;\r\n        if (on) {\r\n            this.resumeMusic();\r\n        } else {\r\n            this.pauseMusic();\r\n        }\r\n    }\r\n\r\n    public get musicOn(): boolean {\r\n        return this._musicOn;\r\n    }\r\n\r\n    public set soundOn(on: boolean) {\r\n        this._soundOn = on;\r\n    }\r\n\r\n    public get soundOn(): boolean {\r\n        return this._soundOn;\r\n    }\r\n}\r\n"]}