{"version":3,"sources":["../../../../../../assets/Script/UI/ranking/assets/Script/UI/ranking/RankingCell.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"../../../../../../assets/Script/UI/ranking","sourcesContent":["//排行榜单条数据信息\r\n\r\nimport GameCtr from \"../../Controller/GameCtr\";\r\nimport Util from \"../../Common/Util\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class RankingCell extends cc.Component {\r\n\r\n    @property(cc.Sprite)\r\n    sprBg: cc.Sprite = null;\r\n    @property(cc.Sprite)\r\n    sprMedal: cc.Sprite = null;\r\n    @property(cc.Sprite)\r\n    sprHead: cc.Sprite = null;\r\n    @property(cc.Label)\r\n    lbRank: cc.Label = null;\r\n    @property(cc.Label)\r\n    lbName: cc.Label = null;\r\n    @property(cc.Label)\r\n    lbCity: cc.Label = null;\r\n    @property(cc.Label)\r\n    lbScore: cc.Label = null;\r\n    @property([cc.SpriteFrame])\r\n    medalFrames: cc.SpriteFrame[] = [];\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {}\r\n\r\n    setData(rank, data) {\r\n        // this.setBgColor(rank);\r\n        let name=data.nick?data.nick:data.nickname;\r\n        let icon=data.Icon?data.Icon:data.avatarUrl;\r\n        let city=data.City?data.City:data.KVDataList[0].value;\r\n        let value=data.value?data.value:data.KVDataList[1].value\r\n        this.lbCity.string = city;\r\n        this.lbName.string = Util.cutstr(name, 10);\r\n        this.lbScore.string =Util.formatNumber(value)+\"\";\r\n        this.setMedal(rank);\r\n        this.loadImg(this.sprHead,icon)\r\n        // this.createImage(icon);\r\n    }\r\n\r\n    setMedal(idx) {\r\n        if(idx <= 3) {\r\n            this.sprMedal.node.active = true;\r\n            this.sprMedal.spriteFrame = this.medalFrames[idx-1];\r\n            this.lbRank.node.active = true;\r\n            this.lbRank.string = \"\";\r\n            \r\n        }else{\r\n            this.lbRank.node.active = true;\r\n            this.lbRank.string = idx;\r\n            this.sprMedal.node.active = false;\r\n        }\r\n    }\r\n\r\n    //根据index设置背景色\r\n    setBgColor(idx) {\r\n        idx = idx % 2;\r\n        this.sprBg.node.color = (idx == 0) ? cc.hexToColor(\"#1966EE\") : cc.hexToColor(\"#5990F1\");\r\n    }\r\n\r\n    loadImg(spr, imgUrl) {\r\n        if(!imgUrl||imgUrl==\"\"){return;}\r\n        cc.loader.load({\r\n            url: imgUrl,\r\n            type: 'jpg'\r\n        }, (err, texture) => {\r\n            spr.spriteFrame = new cc.SpriteFrame(texture);\r\n        });\r\n    }\r\n\r\n    // createImage(avatarUrl) {\r\n    //     if (window.wx != undefined) {\r\n    //         try {\r\n    //             let image = wx.createImage();\r\n    //             image.onload = () => {\r\n    //                 try {\r\n    //                     let texture = new cc.Texture2D();\r\n    //                     texture.initWithElement(image);\r\n    //                     texture.handleLoadedTexture();\r\n    //                     this.sprHead.spriteFrame = new cc.SpriteFrame(texture);\r\n    //                 } catch (e) {\r\n    //                     cc.log(e);\r\n    //                     this.sprHead.node.active = false;\r\n    //                 }\r\n    //             };\r\n    //             image.src = avatarUrl;\r\n    //         } catch (e) {\r\n    //             cc.log(e);\r\n    //             this.sprHead.node.active = false;\r\n    //         }\r\n    //     } else {\r\n    //         cc.loader.load({\r\n    //             url: avatarUrl,\r\n    //             type: 'jpg'\r\n    //         }, (err, texture) => {\r\n    //             this.sprHead.spriteFrame = new cc.SpriteFrame(texture);\r\n    //         });\r\n    //     }\r\n    // }\r\n\r\n\r\n\r\n    // start () {\r\n\r\n    // }\r\n\r\n    // update (dt) {}\r\n}\r\n"]}