{"version":3,"sources":["../../../../../../assets/Script/UI/component/assets/Script/UI/component/ufo.ts"],"names":[],"mappings":";;;;;AAAA,0DAAqD;AACrD,oDAA+C;AAC/C,oDAA+C;AAEzC,IAAA,kBAAmC,EAAlC,oBAAO,EAAE,sBAAQ,CAAkB;AAE1C;IAAsC,4BAAY;IADlD;QAAA,qEA4CC;QAxCG,cAAQ,GAAW,IAAI,CAAC;QACxB,iBAAW,GAAC,IAAI,CAAC;;IAuCrB,CAAC;IAtCG,yBAAM,GAAN;QAAA,iBAoCC;QAnCG,IAAI,CAAC,WAAW,GAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC;QACzD,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,QAAQ,CAC3B,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EACjB,EAAE,CAAC,QAAQ,CAAC;YACR,KAAI,CAAC,WAAW,CAAC,SAAS,CAAC,EAAE,CAAC,QAAQ,CAClC,EAAE,CAAC,MAAM,CAAC,GAAG,EAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,EACvD,EAAE,CAAC,QAAQ,CAAC;gBACR,KAAI,CAAC,WAAW,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAC,UAAC,CAAC;oBAC9C,sBAAY,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC;oBACzD,KAAI,CAAC,WAAW,CAAC,MAAM,GAAC,KAAK,CAAC;oBAC9B,IAAG,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,UAAU,CAAC,EAAC;wBAAC,OAAM;qBAAC;oBAAA,CAAC;oBACzD,IAAI,QAAQ,GAAC,EAAE,CAAC,WAAW,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC;oBAC3C,QAAQ,CAAC,MAAM,GAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;oBAClC,iBAAO,CAAC,SAAS,CAAC,iBAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;gBAC7C,CAAC,CAAC,CAAA;gBACF,KAAI,CAAC,WAAW,CAAC,SAAS,CAAC,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,QAAQ,CACnD,EAAE,CAAC,QAAQ,CAAC,GAAG,EAAC,CAAC,EAAE,CAAC,EACpB,EAAE,CAAC,QAAQ,CAAC,GAAG,EAAC,EAAE,CAAC,EACnB,EAAE,CAAC,QAAQ,CAAC,GAAG,EAAC,CAAC,EAAE,CAAC,EACpB,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAC,CAAC,EAAE,CAAC,EACrB,EAAE,CAAC,QAAQ,CAAC,GAAG,EAAC,EAAE,CAAC,EACnB,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAC,CAAC,EAAE,CAAC,EACrB,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,CAClB,CAAC,CAAC,CAAA;YACP,CAAC,CAAC,CACL,CAAC,CAAA;QACN,CAAC,CAAC,CACL,CAAC,CAAA;QAIF,IAAI,aAAa,GAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,YAAY,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC;QAC9E,aAAa,CAAC,mBAAmB,CAAC;YAC9B,KAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;QACxB,CAAC,CAAC,CAAA;IACN,CAAC;IAtCD;QADC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;8CACI;IAHP,QAAQ;QAD5B,OAAO;OACa,QAAQ,CA2C5B;IAAD,eAAC;CA3CD,AA2CC,CA3CqC,EAAE,CAAC,SAAS,GA2CjD;kBA3CoB,QAAQ","file":"","sourceRoot":"../../../../../../assets/Script/UI/component","sourcesContent":["import AudioManager from \"../../Common/AudioManager\";\nimport HttpCtr from \"../../Controller/HttpCtr\";\nimport GameCtr from \"../../Controller/GameCtr\";\n\nconst {ccclass, property} = cc._decorator;\n@ccclass\nexport default class NewClass extends cc.Component {\n\n    @property(cc.Prefab)\n    ufoAward:cc.Prefab=null;\n    treatureBox=null;\n    onLoad(){\n        this.treatureBox=this.node.getChildByName(\"treatureBox\");\n        this.node.runAction(cc.sequence(\n            cc.delayTime(3.5),\n            cc.callFunc(()=>{\n                this.treatureBox.runAction(cc.sequence(\n                    cc.moveTo(0.5,cc.p(0,0)).easing(cc.easeElasticOut(3.0)),\n                    cc.callFunc(()=>{\n                        this.treatureBox.on(cc.Node.EventType.TOUCH_END,(e)=>{\n                            AudioManager.getInstance().playSound(\"audio/open_panel\");\n                            this.treatureBox.active=false;\n                            if(cc.find(\"Canvas\").getChildByName(\"ufoAward\")){return};\n                            let ufoAward=cc.instantiate(this.ufoAward);\n                            ufoAward.parent=cc.find(\"Canvas\");\n                            HttpCtr.openClick(GameCtr.clickType.ufo);\n                        })\n                        this.treatureBox.runAction(cc.repeatForever(cc.sequence(\n                            cc.rotateBy(0.1,-10),\n                            cc.rotateBy(0.2,20),\n                            cc.rotateBy(0.1,-10),\n                            cc.rotateBy(0.05,-10),\n                            cc.rotateBy(0.1,20),\n                            cc.rotateBy(0.05,-10),\n                            cc.delayTime(4),\n                        )))\n                    }),\n                ))\n            })\n        ))\n       \n\n\n        let spineSkeleton=this.node.getChildByName(\"spine\").getComponent(sp.Skeleton);\n        spineSkeleton.setCompleteListener(()=>{\n            this.node.destroy();\n        })\n    }\n\n}\n"]}