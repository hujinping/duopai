{"version":3,"sources":["..\\..\\..\\..\\..\\..\\assets\\Script\\UI\\loading/assets\\Script\\UI\\loading\\loading.ts"],"names":[],"mappings":";;;;;AAAA,oDAA+C;AACzC,IAAA,kBAAmC,EAAlC,oBAAO,EAAE,sBAAQ,CAAkB;AAG1C;IAAsC,4BAAY;IADlD;QAAA,qEA2CC;QAzCW,YAAM,GAAC,IAAI,CAAC;QACZ,kBAAY,GAAC,IAAI,CAAC;QAClB,sBAAgB,GAAC,IAAI,CAAC;;IAuClC,CAAC;IArCG,yBAAM,GAAN;QACI,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,WAAW,EAAE,CAAC;IACvB,CAAC;IAED,2BAAQ,GAAR;QACI,IAAI,IAAI,GAAC,IAAI,CAAC,IAAI,CAAC;QACnB,IAAI,CAAC,MAAM,GAAC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;QAC1C,IAAI,CAAC,YAAY,GAAC,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC;QACtD,IAAI,CAAC,gBAAgB,GAAC,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;QAC/D,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC,QAAQ,GAAC,CAAC,CAAC;QAC1D,IAAI,CAAC,YAAY,EAAE,CAAC;IACxB,CAAC;IAED,+BAAY,GAAZ;QACI,EAAE,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,EAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IACpG,CAAC;IAED,mCAAgB,GAAhB,UAAiB,cAAc,EAAC,UAAU,EAAC,IAAI;QAC3C,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC,QAAQ,GAAC,cAAc,GAAC,UAAU,CAAC;QAClF,IAAI,CAAC,gBAAgB,CAAC,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,CAAC,KAAK,GAAC,CAAC,cAAc,GAAC,UAAU,CAAC,GAAC,EAAE,CAAC;IACtG,CAAC;IAED,mCAAgB,GAAhB;QACI,iBAAO,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,cAAc,EAAC,IAAI,CAAC,CAAC;IACzD,CAAC;IAED,8BAAW,GAAX;QACI,IAAI,MAAM,GAAC,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;QACrD,MAAM,CAAC,MAAM,GAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAChC,MAAM,CAAC,WAAW,GAAC,IAAI,CAAC;QACxB,MAAM,CAAC,YAAY,GAAC,IAAI,CAAC;QACzB,MAAM,CAAC,IAAI,GAAC,EAAE,CAAC;QACf,MAAM,CAAC,KAAK,GAAC,EAAE,CAAC;IACpB,CAAC;IAvCgB,QAAQ;QAD5B,OAAO;OACa,QAAQ,CA0C5B;IAAD,eAAC;CA1CD,AA0CC,CA1CqC,EAAE,CAAC,SAAS,GA0CjD;kBA1CoB,QAAQ","file":"","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\Script\\UI\\loading","sourcesContent":["import GameCtr from \"../../Controller/GameCtr\";\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class NewClass extends cc.Component {\r\n    private btn_go=null;\r\n    private loadProgress=null;\r\n    private loadProgressIcon=null;\r\n  \r\n    onLoad(){\r\n        this.initNode();\r\n        this.adaptScreen();\r\n    }\r\n\r\n    initNode(){\r\n        let root=this.node;\r\n        this.btn_go=root.getChildByName(\"btn_go\");\r\n        this.loadProgress=root.getChildByName(\"loadProgress\");\r\n        this.loadProgressIcon=this.loadProgress.getChildByName(\"icon\");\r\n        this.loadProgress.getComponent(cc.ProgressBar).progress=0;\r\n        this.loadResource();\r\n    }\r\n\r\n    loadResource(){\r\n        cc.loader.loadResDir(\"spine\",this.progressCallback.bind(this),this.completeCallback.bind(this));\r\n    }\r\n\r\n    progressCallback(completedCount,totalCount,item){\r\n        this.loadProgress.getComponent(cc.ProgressBar).progress=completedCount/totalCount;\r\n        this.loadProgressIcon.x = this.loadProgress.getContentSize().width*(completedCount/totalCount)+25;\r\n    }\r\n\r\n    completeCallback(){\r\n        GameCtr.getInstance().emitEvent(\"loadComplete\",null);\r\n    }\r\n\r\n    adaptScreen(){\r\n        var widget=this.loadProgress.getComponent(cc.Widget);\r\n        widget.target=cc.find(\"Canvas\");\r\n        widget.isAlignLeft=true;\r\n        widget.isAlignRight=true;\r\n        widget.left=67;\r\n        widget.right=83;\r\n    }\r\n\r\n    \r\n}\r\n"]}